const fs = require('fs');
const utils = require('../utils');
const config = require('../config');
const path = require('path');

const parse = require('pegjs').buildParser(
    fs.readFileSync(path.join(config.root, "bts/core/engine/hibiku-parse.pegjs"), 'utf-8')
).parse;

function render(data, options) {
    
    var context, replace;
    
    function act(line, input) {
        var token = input.token;
        if (token) {
            if (token === 'include') {
                const view = options['_view'].replace(path.basename(options['_view']), '');
                return render(fs.readFileSync(view + input.context + config.engine.extension, 'utf-8'), {lang: config.user.options.locale});
            } else if (token === 'anchor') {
                return line.replace('(('+input.context+'))', options[input.context]);
            }
        };
    };
    
    data = data.split("\n").map(function(line) {
        var tags = line.match(/\(\([^]+?\)\)/g);
        if (tags) {
            var parsed = parse(tags.join(''));
            if (parsed[0]) {
                parsed.forEach(function(tag) {
                    line = act(line, tag);
                });
            }
        }
    
    console.log(data);
    return data;
    
}

module.exports = {
    render: render
}