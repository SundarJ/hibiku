const Promise = require('bluebird');

const readFileSync = require('fs').readFileSync;
const path = require('path');

const utils = require('../utils');

const render = require('./render');

function engine(route) {
    return Promise.map(settings.engine.views, function(viewDir) {
        return Promise.filter(utils.walk(viewDir), function(view) {
            view = path.basename(view.replace(settings.user.root, '').replace(settings.engine.extension, ''));
            return route === view;
        });
    }).then(function(eligible) {
        const user = eligible.slice(1)[0];
        const full = utils.flatten(eligible);
        
        if (full.length === 1) {
            return function(options) {
                options = options || {};
                options['_view'] = path.dirname(full[0]);
                return render(readFileSync(full[0], 'utf-8'), options);
            };
        } else {
            // prefer user views
        }
    });
}

module.exports = function Engine(hook, options) {
    return engine(hook).then(function(Render) {
        return Render(options);
    });
};
