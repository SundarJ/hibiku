const Promise = require('bluebird');
const fs = require('fs');
const readdirAsync = Promise.promisify(fs.readdir);
const statAsync = Promise.promisify(fs.stat);
const path = require('path');

function Utils() {};

Utils.prototype.walk = function(directory) {
    var self = this;
    return readdirAsync(directory).map(function(file) {
        var resolved = path.join(directory, file);
        return statAsync(resolved).then(function(stat) {
            return stat.isDirectory() ? self.walk(resolved) : resolved;
        });
    }).reduce(function (a, b) {
        return a.concat(b);
    }, []);
};

Utils.prototype.regex = {
  create: function(str, flags) {
    return new RegExp(str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&"), flags);
  }
};

Utils.prototype.flatten = function(arr) {
  return arr.reduce(function(a,b) {
    return a.concat(b);
  }, []);
};

Utils.prototype.filter = {
  truthy: function(item) { return item },
  notEmpty: function(item) { return item.length }
};

Utils.prototype.assign = require('deep-extend');
    

module.exports = new Utils;
