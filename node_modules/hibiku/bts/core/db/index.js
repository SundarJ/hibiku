const Promise = require('bluebird');
const config = require('../config');
const mongoose = require('mongoose');


mongoose.connect('mongodb://'+config.user.db.host+'/'+config.user.db.name, {
    user: config.user.db.user,
    pass: config.user.db.pass
});
    mongoose.connection.on('error', console.error.bind(console, 'mongo error:'));


const pageSchema = new mongoose.Schema({
    page: String,
    fields: [{
        anchor: String,
        content: String
    }]
});

const Page = mongoose.model('Page', pageSchema);

function setup() {
    return Promise.promisify(mongoose.connection.once).bind(mongoose.connection, 'open');
}

function saveNew(data) {
    const page = new Page(data);
    Page.findOneAndUpdate({_id: page.id}, page, {upsert: true}, function(err) {
        if (err) console.error("mongo error:", err);
    });
}

module.exports = {
    setup: setup,
    save: saveNew
};
















/*const nano = Promise.promisifyAll(require('nano'));
const redis = Promise.promisifyAll(require('redis'));

https://github.com/Level/levelup
http://kyoto-client.org/
http://docs.basho.com/riak/latest/theory/why-riak/
https://github.com/ssdb/nodessdb
https://github.com/pouchdb/express-pouchdb

orientdb

http://guide.couchdb.org/editions/1/en/index.html
https://github.com/dscape/nano/blob/master/lib/nano.js
http://writings.nunojob.com/2011/08/nano-minimalistic-couchdb-client-for-nodejs.html
http://redis.io/topics/lru-cache
https://github.com/alevy/memjs
http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis

*/