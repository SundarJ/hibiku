const JSCK = require('jsck');
const fs = require('fs');
const Promise = require('bluebird');
const readFileAsync = Promise.promisify(fs.readFile);
const path = require('path');

const config = require('../../../config');
const utils = require('../../../utils');

const schema = JSON.parse(fs.readFileSync(path.join(__dirname,'schema.json'), 'utf-8'));
const jsck = new JSCK.draft4(schema);

module.exports = function(req, res) {
    if (req.headers.accept === 'application/json' && req.headers['content-type'] === 'application/json; charset=UTF-8') {
        var validated = jsck.validate(req.body);
        if (validated.valid) {
            var file = path.join(config.user.root, req.body.file) + config.engine.extension;
            if (!~file.indexOf(config.root)) {
                readFileAsync(file, 'utf-8').then(function(data) {
                   data = data.split("\n").map(function(line) {
                        var tags = line.match(/\(\([^]+?\)\)/g);
                        if (tags)
                            return tags[0].replace(/[\(\)]/g, '');
                    }).filter(utils.filter.truthy).filter(function(i) { return i[0] != '>'});
                    res.json({anchors: data}); 
                });
                
            } else {
                res.status(403);
                res.json({"error": "forbidden"});
            }
        }
    } else {
        res.status(400);
        res.json({"error": "bad request"});
    }
};
